#pragma version 10
#pragma typetrack false

// contracts/simple/simple.algo.ts::Simple.clearStateProgram() -> uint64:
main:
    bytecblock "counter"
    // contracts/simple/simple.algo.ts:10
    // counter = GlobalState<uint64>({ key: "counter", initialValue: 0 });
    pushint 0 // 0
    bytec_0 // "counter"
    app_global_get_ex
    assert // check GlobalState exists
    // contracts/simple/simple.algo.ts:36
    // this.incrementCounter(1);
    pushint 1 // 1
    // contracts/simple/simple.algo.ts:13
    // this.counter.value = this.counter.value + i;
    +
    // contracts/simple/simple.algo.ts:10
    // counter = GlobalState<uint64>({ key: "counter", initialValue: 0 });
    bytec_0 // "counter"
    // contracts/simple/simple.algo.ts:13
    // this.counter.value = this.counter.value + i;
    swap
    app_global_put
    // contracts/simple/simple.algo.ts:37
    // return true;
    pushint 1 // 1
    return
