{
  "version": 3,
  "sources": [
    "/home/parallels/dev/puya-ts-demo/contracts/arc75/arc75.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;AAyBA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAmBG;AAAA;AAYD;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAMwB;;AAA0B;;AAAA;AAAA;;AAAA;AAErB;;AADT;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMC;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAW;AAAA;;AAA9B;;;AAC4B;;AAAA;AAAA;AAAA;AAA1B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;;AAAA;AAKF;;AAAA;;AAAA;;;AAnBF;AAAA;AAgBsC;AAAA;;;;AAAA;AAAA;AAAlC;;AAAA;AAAA;;AAAA;AAAA;;;;AAcJ;;;AAAA;;;AAAA;;;AAAA;;;AACwB;;AAA0B;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAErB;;AADT;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAEoB;;AAA0B;;AAAA;AAA1C;AAAJ;;;AACE;;;AAbJ;AAAA;AAe8C;;AAAa;AAAjB;AAAhB;AAAA;;AAAA;AAAA;AAAA;AAAtB;AAAA;;;;;;AAWJ;;;AAAA;;;AAAA;;;AACwB;;AAA0B;;AAAA;AAErB;;AADT;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;;AAEA;;;AAVF;AAAA;AAqBA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAMwB;;AAA0B;;AAAA;AAAA;;AAAA;AAErB;;AADT;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMa;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAf;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEe;;;;AACV;AAAiC;;AAAA;AAAA;;AAAA;AAAA;AAA9B;;AAAA;AAAxB;;;AACM;AAAA;;AAAA;AAAJ;;;AACoB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AAFgE;AAAA;AAAA;AAAA;;;;;AAKpE;;AAAA;AAAA;;AAAA;;AAAA;AAEO;;AAAA;;AAAA;AAAP;AAEA;;AAAA;;;AAzBF;AAAA;AAzGA;;;AACE;;AAAA;;AACmB;;AADnB;AAAA;;AAAA;;AAEiB;;AAA0B;;AAAA;AAAjC;;AAAA;AAFV;AAAA;AAAA;;AAMF;;;AACE;AAEkB;;AACU;;AAA0B;;AAAA;AAA1C;;AAAA;AAAA;;;;;AAHZ;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 34 8"
    },
    "7": {
      "op": "bytecblock 0x0024"
    },
    "12": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "14": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "15": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "16": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "18": {
      "op": "bz main_create_NoOp@8",
      "stack_out": []
    },
    "21": {
      "op": "pushbytess 0x467c7cbd 0xd198fcb8 0x7c33e832 0x7e1674ac // method \"addAppToWhiteList(string,uint16,uint64,pay)void\", method \"setAppWhitelist(string,uint16,uint64[])void\", method \"deleteWhitelist(string,uint16)void\", method \"deleteAppFromWhitelist(string,uint16,uint64,uint64)void\"",
      "defined_out": [
        "Method(addAppToWhiteList(string,uint16,uint64,pay)void)",
        "Method(deleteAppFromWhitelist(string,uint16,uint64,uint64)void)",
        "Method(deleteWhitelist(string,uint16)void)",
        "Method(setAppWhitelist(string,uint16,uint64[])void)"
      ],
      "stack_out": [
        "Method(addAppToWhiteList(string,uint16,uint64,pay)void)",
        "Method(setAppWhitelist(string,uint16,uint64[])void)",
        "Method(deleteWhitelist(string,uint16)void)",
        "Method(deleteAppFromWhitelist(string,uint16,uint64,uint64)void)"
      ]
    },
    "43": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(addAppToWhiteList(string,uint16,uint64,pay)void)",
        "Method(deleteAppFromWhitelist(string,uint16,uint64,uint64)void)",
        "Method(deleteWhitelist(string,uint16)void)",
        "Method(setAppWhitelist(string,uint16,uint64[])void)",
        "tmp%4#0"
      ],
      "stack_out": [
        "Method(addAppToWhiteList(string,uint16,uint64,pay)void)",
        "Method(setAppWhitelist(string,uint16,uint64[])void)",
        "Method(deleteWhitelist(string,uint16)void)",
        "Method(deleteAppFromWhitelist(string,uint16,uint64,uint64)void)",
        "tmp%4#0"
      ]
    },
    "46": {
      "op": "match addAppToWhiteList setAppWhitelist deleteWhitelist deleteAppFromWhitelist",
      "stack_out": []
    },
    "56": {
      "op": "err"
    },
    "57": {
      "block": "main_create_NoOp@8",
      "stack_in": [],
      "op": "pushbytes 0xb8447b36 // method \"createApplication()void\"",
      "defined_out": [
        "Method(createApplication()void)"
      ],
      "stack_out": [
        "Method(createApplication()void)"
      ]
    },
    "63": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "tmp%5#0"
      ]
    },
    "66": {
      "op": "match main_createApplication_route@9",
      "stack_out": []
    },
    "70": {
      "op": "err"
    },
    "71": {
      "block": "main_createApplication_route@9",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "72": {
      "op": "return",
      "stack_out": []
    },
    "73": {
      "subroutine": "contracts/arc75/arc75.algo.ts::ARC75.addAppToWhiteList[routing]",
      "params": {},
      "block": "addAppToWhiteList",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "76": {
      "op": "extract 2 0",
      "defined_out": [
        "arc#0"
      ],
      "stack_out": [
        "arc#0"
      ]
    },
    "79": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0"
      ]
    },
    "82": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "85": {
      "op": "btoi",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appID#0"
      ]
    },
    "86": {
      "op": "cover 2",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ]
    },
    "88": {
      "op": "txn GroupIndex",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "tmp%2#0"
      ]
    },
    "90": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "tmp%2#0",
        "1"
      ]
    },
    "91": {
      "op": "-",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0"
      ]
    },
    "92": {
      "op": "dup",
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0",
        "payment#0"
      ]
    },
    "93": {
      "op": "cover 4",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0"
      ]
    },
    "95": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "gtxn_type%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "gtxn_type%0#0"
      ]
    },
    "97": {
      "op": "intc_0 // pay",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "gtxn_type%0#0",
        "pay",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "98": {
      "op": "==",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "gtxn_type_matches%0#0",
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "99": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ]
    },
    "100": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "tmp%0#1"
      ]
    },
    "102": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "preMBR#0",
        "check%0#0"
      ]
    },
    "104": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "preMBR#0"
      ]
    },
    "105": {
      "op": "cover 4",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0"
      ]
    },
    "107": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ]
    },
    "108": {
      "op": "txn Sender",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "payment#0",
        "preMBR#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "110": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "boxIndex#0"
      ]
    },
    "111": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "appID#0",
        "arc#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "aggregate%head%1#0"
      ]
    },
    "112": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%1#0",
        "appID#0",
        "arc#0",
        "arc#0 (copy)",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "aggregate%head%1#0",
        "arc#0 (copy)"
      ]
    },
    "114": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "appID#0",
        "arc#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "115": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "appID#0",
        "arc#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "116": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "appID#0",
        "arc#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "arc#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "119": {
      "op": "uncover 2",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "arc#0"
      ]
    },
    "121": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "122": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "123": {
      "op": "bytec_0 // 0x0024",
      "defined_out": [
        "0x0024",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "0x0024"
      ]
    },
    "124": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0"
      ]
    },
    "125": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "126": {
      "op": "concat",
      "defined_out": [
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0"
      ]
    },
    "127": {
      "op": "dup",
      "defined_out": [
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ]
    },
    "128": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0"
      ]
    },
    "131": {
      "op": "dig 1",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "133": {
      "op": "extract 32 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "136": {
      "op": "dig 2",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)"
      ]
    },
    "138": {
      "op": "intc_2 // 34",
      "defined_out": [
        "34",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)",
        "34"
      ]
    },
    "139": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "140": {
      "op": "dig 3",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "142": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "143": {
      "op": "uncover 4",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "whitelist#0"
      ]
    },
    "145": {
      "op": "cover 2",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "147": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "148": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "values%0#0"
      ]
    },
    "151": {
      "op": "cover 2",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "values%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "153": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "values%0#0",
        "aggregate%head%4#0"
      ]
    },
    "154": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "values%0#0",
        "values%0#0 (copy)"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "values%0#0",
        "aggregate%head%4#0",
        "values%0#0 (copy)"
      ]
    },
    "156": {
      "op": "len",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length%1#0"
      ]
    },
    "157": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%4#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "158": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "161": {
      "op": "uncover 2",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "values%0#0"
      ]
    },
    "163": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "164": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "165": {
      "op": "bytec_0 // 0x0024",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "0x0024"
      ]
    },
    "166": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0"
      ]
    },
    "167": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%head%5#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "168": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%concat%1#0"
      ]
    },
    "169": {
      "op": "dup",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "appID#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0"
      ]
    },
    "170": {
      "op": "cover 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "aggregate%concat%1#0"
      ]
    },
    "172": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "aggregate%concat%1#0",
        "appID#0",
        "maybe_exists%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "173": {
      "op": "bury 1",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "maybe_exists%0#0"
      ]
    },
    "175": {
      "op": "bz addAppToWhiteList_else_body@3",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0"
      ]
    },
    "178": {
      "op": "dig 1",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "aggregate%concat%1#0"
      ]
    },
    "180": {
      "op": "dup",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)"
      ]
    },
    "181": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "aggregate%concat%1#0",
        "appID#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "182": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0"
      ]
    },
    "183": {
      "op": "uncover 2",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0",
        "appID#0"
      ]
    },
    "185": {
      "op": "itob",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "186": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)",
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%box_get%0#0 (copy)"
      ]
    },
    "188": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%0#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "189": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "aggregate%box_get%0#0",
        "concat%0#0"
      ]
    },
    "190": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "aggregate%box_get%0#0"
      ]
    },
    "191": {
      "op": "intc_1 // 0",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "aggregate%box_get%0#0",
        "0"
      ]
    },
    "192": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%concat%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "193": {
      "op": "intc_0 // 1",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "194": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "195": {
      "op": "itob",
      "defined_out": [
        "aggregate%concat%1#0",
        "as_bytes%0#0",
        "concat%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "196": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "199": {
      "op": "replace2 0",
      "defined_out": [
        "aggregate%concat%1#0",
        "payment#0",
        "preMBR#0",
        "replace%0#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "replace%0#0"
      ]
    },
    "201": {
      "op": "dig 1",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "replace%0#0",
        "aggregate%concat%1#0 (copy)"
      ]
    },
    "203": {
      "op": "box_del",
      "defined_out": [
        "aggregate%concat%1#0",
        "payment#0",
        "preMBR#0",
        "replace%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "replace%0#0",
        "{box_del}"
      ]
    },
    "204": {
      "op": "pop",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "replace%0#0"
      ]
    },
    "205": {
      "op": "box_put",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0"
      ]
    },
    "206": {
      "block": "addAppToWhiteList_after_if_else@4",
      "stack_in": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0"
      ],
      "op": "dig 2",
      "defined_out": [
        "payment#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "payment#0"
      ]
    },
    "208": {
      "op": "dig 2",
      "defined_out": [
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "payment#0",
        "preMBR#0"
      ]
    },
    "210": {
      "callsub": "contracts/arc75/arc75.algo.ts::ARC75.verifyMBRPayment",
      "op": "callsub verifyMBRPayment",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0"
      ]
    },
    "213": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "payment#0",
        "preMBR#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "1"
      ]
    },
    "214": {
      "op": "return",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0"
      ]
    },
    "215": {
      "block": "addAppToWhiteList_else_body@3",
      "stack_in": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appID#0"
      ],
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "216": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%val_as_bytes%1#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%1#0",
        "0x0001"
      ]
    },
    "220": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "0x0001",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "221": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%head%7#0"
      ]
    },
    "222": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%head%7#0",
        "aggregate%concat%1#0"
      ]
    },
    "224": {
      "op": "dup",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)",
        "aggregate%head%7#0"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%head%7#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)"
      ]
    },
    "225": {
      "op": "box_del",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%head%7#0",
        "{box_del}"
      ],
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%head%7#0",
        "aggregate%concat%1#0",
        "{box_del}"
      ]
    },
    "226": {
      "op": "pop",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%head%7#0",
        "aggregate%concat%1#0"
      ]
    },
    "227": {
      "op": "swap",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "aggregate%head%7#0"
      ]
    },
    "228": {
      "op": "box_put",
      "stack_out": [
        "payment#0",
        "preMBR#0",
        "aggregate%concat%1#0"
      ]
    },
    "229": {
      "op": "b addAppToWhiteList_after_if_else@4"
    },
    "232": {
      "subroutine": "contracts/arc75/arc75.algo.ts::ARC75.setAppWhitelist[routing]",
      "params": {},
      "block": "setAppWhitelist",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "235": {
      "op": "extract 2 0",
      "defined_out": [
        "arc#0"
      ],
      "stack_out": [
        "arc#0"
      ]
    },
    "238": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0"
      ]
    },
    "241": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "appIDs#0",
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appIDs#0"
      ]
    },
    "244": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "appIDs#0",
        "arc#0",
        "boxIndex#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "tmp%0#1"
      ]
    },
    "246": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "appIDs#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "preMBR#0",
        "check%0#0"
      ]
    },
    "248": {
      "op": "swap",
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "check%0#0",
        "preMBR#0"
      ]
    },
    "249": {
      "op": "dup",
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "check%0#0",
        "preMBR#0",
        "preMBR#0 (copy)"
      ]
    },
    "250": {
      "op": "cover 5",
      "stack_out": [
        "preMBR#0",
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "check%0#0",
        "preMBR#0"
      ]
    },
    "252": {
      "op": "cover 5",
      "defined_out": [
        "appIDs#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "check%0#0"
      ]
    },
    "254": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "boxIndex#0",
        "appIDs#0"
      ]
    },
    "255": {
      "op": "txn Sender",
      "defined_out": [
        "appIDs#0",
        "arc#0",
        "boxIndex#0",
        "preMBR#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "boxIndex#0",
        "appIDs#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "257": {
      "op": "uncover 2",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "appIDs#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "boxIndex#0"
      ]
    },
    "259": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "appIDs#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "appIDs#0",
        "aggregate%head%1#0"
      ]
    },
    "260": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%1#0",
        "appIDs#0",
        "arc#0",
        "arc#0 (copy)",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "appIDs#0",
        "aggregate%head%1#0",
        "arc#0 (copy)"
      ]
    },
    "262": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "appIDs#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "appIDs#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "263": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "appIDs#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "appIDs#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "264": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "appIDs#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "arc#0",
        "appIDs#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "267": {
      "op": "uncover 3",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "arc#0"
      ]
    },
    "269": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "270": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "271": {
      "op": "bytec_0 // 0x0024",
      "defined_out": [
        "0x0024",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "0x0024"
      ]
    },
    "272": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0"
      ]
    },
    "273": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "274": {
      "op": "concat",
      "defined_out": [
        "appIDs#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0"
      ]
    },
    "275": {
      "op": "dup",
      "defined_out": [
        "appIDs#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ]
    },
    "276": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "appIDs#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0"
      ]
    },
    "279": {
      "op": "dig 1",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "281": {
      "op": "extract 32 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appIDs#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "284": {
      "op": "dig 2",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)"
      ]
    },
    "286": {
      "op": "intc_2 // 34",
      "defined_out": [
        "34",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appIDs#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)",
        "34"
      ]
    },
    "287": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "appIDs#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "288": {
      "op": "dig 3",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "290": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "appIDs#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "291": {
      "op": "uncover 4",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "whitelist#0"
      ]
    },
    "293": {
      "op": "cover 2",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "295": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "296": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appIDs#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "values%0#0"
      ]
    },
    "299": {
      "op": "cover 2",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "values%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "301": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "appIDs#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "values%0#0",
        "aggregate%head%4#0"
      ]
    },
    "302": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "appIDs#0",
        "preMBR#0",
        "values%0#0",
        "values%0#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "values%0#0",
        "aggregate%head%4#0",
        "values%0#0 (copy)"
      ]
    },
    "304": {
      "op": "len",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length%1#0",
        "appIDs#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length%1#0"
      ]
    },
    "305": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%4#0",
        "appIDs#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "306": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "appIDs#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "309": {
      "op": "uncover 2",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "values%0#0"
      ]
    },
    "311": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "312": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "313": {
      "op": "bytec_0 // 0x0024",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "0x0024"
      ]
    },
    "314": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0"
      ]
    },
    "315": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%head%5#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "316": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0"
      ]
    },
    "317": {
      "op": "dup",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)",
        "appIDs#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)"
      ]
    },
    "318": {
      "op": "box_del",
      "defined_out": [
        "aggregate%concat%1#0",
        "appIDs#0",
        "preMBR#0",
        "{box_del}"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0",
        "{box_del}"
      ]
    },
    "319": {
      "op": "pop",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0"
      ]
    },
    "320": {
      "op": "dup",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)"
      ]
    },
    "321": {
      "op": "box_del",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0",
        "{box_del}"
      ]
    },
    "322": {
      "op": "pop",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "appIDs#0",
        "aggregate%concat%1#0"
      ]
    },
    "323": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "appIDs#0"
      ]
    },
    "324": {
      "op": "box_put",
      "stack_out": [
        "preMBR#0",
        "preMBR#0"
      ]
    },
    "325": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "preMBR#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "tmp%2#0"
      ]
    },
    "327": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "preMBR#0",
        "value%1#0"
      ],
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "329": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "preMBR#0",
        "preMBR#0",
        "value%1#0"
      ]
    },
    "330": {
      "op": ">",
      "defined_out": [
        "preMBR#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "preMBR#0",
        "tmp%3#0"
      ]
    },
    "331": {
      "op": "bz setAppWhitelist_else_body@3",
      "stack_out": [
        "preMBR#0"
      ]
    },
    "334": {
      "callsub": "contracts/arc75/arc75.algo.ts::ARC75.sendMBRPayment",
      "op": "callsub sendMBRPayment",
      "stack_out": []
    },
    "337": {
      "block": "setAppWhitelist_after_if_else@4",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "338": {
      "op": "return",
      "stack_out": []
    },
    "339": {
      "block": "setAppWhitelist_else_body@3",
      "stack_in": [
        "preMBR#0"
      ],
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "preMBR#0",
        "tmp%4#0"
      ]
    },
    "341": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%4#0"
      ],
      "stack_out": [
        "preMBR#0",
        "tmp%4#0",
        "1"
      ]
    },
    "342": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "gtxn_idx%0#0"
      ]
    },
    "343": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "344": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "346": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "preMBR#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "347": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "348": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "preMBR#0",
        "gtxn_idx%0#0"
      ]
    },
    "349": {
      "op": "swap",
      "defined_out": [
        "gtxn_idx%0#0",
        "preMBR#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "preMBR#0"
      ]
    },
    "350": {
      "callsub": "contracts/arc75/arc75.algo.ts::ARC75.verifyMBRPayment",
      "op": "callsub verifyMBRPayment",
      "stack_out": []
    },
    "353": {
      "op": "b setAppWhitelist_after_if_else@4"
    },
    "356": {
      "subroutine": "contracts/arc75/arc75.algo.ts::ARC75.deleteWhitelist[routing]",
      "params": {},
      "block": "deleteWhitelist",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "359": {
      "op": "extract 2 0",
      "defined_out": [
        "arc#0"
      ],
      "stack_out": [
        "arc#0"
      ]
    },
    "362": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0"
      ]
    },
    "365": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "arc#0",
        "boxIndex#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "tmp%0#1"
      ]
    },
    "367": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "preMBR#0",
        "check%0#0"
      ]
    },
    "369": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "preMBR#0"
      ]
    },
    "370": {
      "op": "txn Sender",
      "defined_out": [
        "arc#0",
        "boxIndex#0",
        "preMBR#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "preMBR#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "372": {
      "op": "uncover 2",
      "stack_out": [
        "arc#0",
        "preMBR#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "boxIndex#0"
      ]
    },
    "374": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "preMBR#0",
        "aggregate%head%1#0"
      ]
    },
    "375": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%head%1#0",
        "arc#0",
        "arc#0 (copy)",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "preMBR#0",
        "aggregate%head%1#0",
        "arc#0 (copy)"
      ]
    },
    "377": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "preMBR#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "378": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "preMBR#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "379": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "arc#0",
        "preMBR#0"
      ],
      "stack_out": [
        "arc#0",
        "preMBR#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "382": {
      "op": "uncover 3",
      "stack_out": [
        "preMBR#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "arc#0"
      ]
    },
    "384": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "385": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "386": {
      "op": "bytec_0 // 0x0024",
      "defined_out": [
        "0x0024",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "0x0024"
      ]
    },
    "387": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0"
      ]
    },
    "388": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "389": {
      "op": "concat",
      "defined_out": [
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0"
      ]
    },
    "390": {
      "op": "dup",
      "defined_out": [
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ]
    },
    "391": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0"
      ]
    },
    "394": {
      "op": "dig 1",
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "396": {
      "op": "extract 32 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "399": {
      "op": "dig 2",
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)"
      ]
    },
    "401": {
      "op": "intc_2 // 34",
      "defined_out": [
        "34",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)",
        "34"
      ]
    },
    "402": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "403": {
      "op": "dig 3",
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "405": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "preMBR#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "406": {
      "op": "uncover 4",
      "stack_out": [
        "preMBR#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "whitelist#0"
      ]
    },
    "408": {
      "op": "cover 2",
      "stack_out": [
        "preMBR#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "410": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "411": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "values%0#0"
      ]
    },
    "414": {
      "op": "cover 2",
      "stack_out": [
        "preMBR#0",
        "values%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "416": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "values%0#0",
        "aggregate%head%4#0"
      ]
    },
    "417": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "preMBR#0",
        "values%0#0",
        "values%0#0 (copy)"
      ],
      "stack_out": [
        "preMBR#0",
        "values%0#0",
        "aggregate%head%4#0",
        "values%0#0 (copy)"
      ]
    },
    "419": {
      "op": "len",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length%1#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length%1#0"
      ]
    },
    "420": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%4#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "421": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "preMBR#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "424": {
      "op": "uncover 2",
      "stack_out": [
        "preMBR#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "values%0#0"
      ]
    },
    "426": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "427": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "428": {
      "op": "bytec_0 // 0x0024",
      "stack_out": [
        "preMBR#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "0x0024"
      ]
    },
    "429": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0"
      ]
    },
    "430": {
      "op": "swap",
      "stack_out": [
        "preMBR#0",
        "aggregate%head%5#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "431": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "preMBR#0"
      ],
      "stack_out": [
        "preMBR#0",
        "aggregate%concat%1#0"
      ]
    },
    "432": {
      "op": "box_del",
      "defined_out": [
        "preMBR#0",
        "{box_del}"
      ],
      "stack_out": [
        "preMBR#0",
        "{box_del}"
      ]
    },
    "433": {
      "op": "pop",
      "stack_out": [
        "preMBR#0"
      ]
    },
    "434": {
      "callsub": "contracts/arc75/arc75.algo.ts::ARC75.sendMBRPayment",
      "op": "callsub sendMBRPayment",
      "stack_out": []
    },
    "437": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "438": {
      "op": "return",
      "stack_out": []
    },
    "439": {
      "subroutine": "contracts/arc75/arc75.algo.ts::ARC75.deleteAppFromWhitelist[routing]",
      "params": {},
      "block": "deleteAppFromWhitelist",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "442": {
      "op": "extract 2 0",
      "defined_out": [
        "arc#0"
      ],
      "stack_out": [
        "arc#0"
      ]
    },
    "445": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0"
      ]
    },
    "448": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "451": {
      "op": "btoi",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "arc#0",
        "boxIndex#0",
        "appID#0"
      ]
    },
    "452": {
      "op": "cover 2",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0"
      ]
    },
    "454": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "457": {
      "op": "btoi",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "index#0"
      ]
    },
    "458": {
      "op": "dup",
      "stack_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "index#0",
        "index#0 (copy)"
      ]
    },
    "459": {
      "op": "cover 3",
      "stack_out": [
        "appID#0",
        "index#0",
        "arc#0",
        "boxIndex#0",
        "index#0"
      ]
    },
    "461": {
      "op": "cover 3",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "index#0",
        "arc#0",
        "boxIndex#0"
      ]
    },
    "463": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "index#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "index#0",
        "arc#0",
        "boxIndex#0",
        "tmp%0#1"
      ]
    },
    "465": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "index#0",
        "arc#0",
        "boxIndex#0",
        "preMBR#0",
        "check%0#0"
      ]
    },
    "467": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "index#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "preMBR#0"
      ]
    },
    "468": {
      "op": "cover 4",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "boxIndex#0",
        "check%0#0"
      ]
    },
    "470": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "boxIndex#0"
      ]
    },
    "471": {
      "op": "txn Sender",
      "defined_out": [
        "appID#0",
        "arc#0",
        "boxIndex#0",
        "index#0",
        "preMBR#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "boxIndex#0",
        "reinterpret_Encoded(uint8[32])%0#0"
      ]
    },
    "473": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "reinterpret_Encoded(uint8[32])%0#0",
        "boxIndex#0"
      ]
    },
    "474": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "appID#0",
        "arc#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "aggregate%head%1#0"
      ]
    },
    "475": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%1#0",
        "appID#0",
        "arc#0",
        "arc#0 (copy)",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "aggregate%head%1#0",
        "arc#0 (copy)"
      ]
    },
    "477": {
      "op": "len",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length%0#0",
        "appID#0",
        "arc#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "aggregate%head%1#0",
        "aggregate%length%0#0"
      ]
    },
    "478": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "aggregate%head%1#0",
        "appID#0",
        "arc#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "aggregate%head%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "479": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "appID#0",
        "arc#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "arc#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "482": {
      "op": "uncover 2",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%head%1#0",
        "aggregate%length_uint16%0#0",
        "arc#0"
      ]
    },
    "484": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%head%1#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "485": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0"
      ]
    },
    "486": {
      "op": "bytec_0 // 0x0024",
      "defined_out": [
        "0x0024",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%1#0",
        "0x0024"
      ]
    },
    "487": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%encoded_value%0#0",
        "aggregate%head%2#0"
      ]
    },
    "488": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%head%2#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "489": {
      "op": "concat",
      "defined_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0"
      ]
    },
    "490": {
      "op": "dup",
      "defined_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ]
    },
    "491": {
      "op": "extract 0 32",
      "defined_out": [
        "aggregate%extract%0#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0"
      ]
    },
    "494": {
      "op": "dig 1",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "496": {
      "op": "extract 32 2",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "499": {
      "op": "dig 2",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)"
      ]
    },
    "501": {
      "op": "intc_2 // 34",
      "defined_out": [
        "34",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0",
        "whitelist#0 (copy)"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0 (copy)",
        "34"
      ]
    },
    "502": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0"
      ]
    },
    "503": {
      "op": "dig 3",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "whitelist#0 (copy)"
      ]
    },
    "505": {
      "op": "len",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "whitelist#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "whitelist#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "506": {
      "op": "uncover 4",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0",
        "whitelist#0"
      ]
    },
    "508": {
      "op": "cover 2",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "whitelist#0",
        "aggregate%extract_uint16%0#0",
        "aggregate%len%0#0"
      ]
    },
    "510": {
      "op": "substring3",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "aggregate%substring3%0#0"
      ]
    },
    "511": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0",
        "values%0#0"
      ]
    },
    "514": {
      "op": "cover 2",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "values%0#0",
        "aggregate%extract%0#0",
        "aggregate%extract%1#0"
      ]
    },
    "516": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%4#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "values%0#0",
        "aggregate%head%4#0"
      ]
    },
    "517": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%head%4#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "values%0#0",
        "values%0#0 (copy)"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "values%0#0",
        "aggregate%head%4#0",
        "values%0#0 (copy)"
      ]
    },
    "519": {
      "op": "len",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length%1#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length%1#0"
      ]
    },
    "520": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%2#0",
        "aggregate%head%4#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%as_bytes%2#0"
      ]
    },
    "521": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "values%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "values%0#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0"
      ]
    },
    "524": {
      "op": "uncover 2",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%head%4#0",
        "aggregate%length_uint16%1#0",
        "values%0#0"
      ]
    },
    "526": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%head%4#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "527": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0"
      ]
    },
    "528": {
      "op": "bytec_0 // 0x0024",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%4#0",
        "0x0024"
      ]
    },
    "529": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%encoded_value%1#0",
        "aggregate%head%5#0"
      ]
    },
    "530": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%head%5#0",
        "aggregate%encoded_value%1#0"
      ]
    },
    "531": {
      "op": "concat",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "index#0",
        "aggregate%concat%1#0"
      ]
    },
    "532": {
      "op": "dup"
    },
    "533": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "index#0"
      ]
    },
    "535": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%concat%1#0",
        "appID#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "index#0",
        "8"
      ]
    },
    "536": {
      "op": "*",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "box%element_offset%0#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "box%element_offset%0#0"
      ]
    },
    "537": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "aggregate%concat%1#0",
        "appID#0",
        "box%element_offset%0#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "box%element_offset%0#0",
        "2"
      ]
    },
    "539": {
      "op": "+",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "box%offset%0#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "box%offset%0#0"
      ]
    },
    "540": {
      "op": "intc_3 // 8",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0",
        "box%offset%0#0",
        "8"
      ]
    },
    "541": {
      "op": "box_extract",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "box%box_extract%0#0",
        "index#0",
        "preMBR#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "box%box_extract%0#0"
      ]
    },
    "542": {
      "op": "btoi",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "index#0",
        "preMBR#0",
        "spliced#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0"
      ]
    },
    "543": {
      "op": "pushbytes 0x0000"
    },
    "547": {
      "op": "intc_1 // 0",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "i#0",
        "index#0",
        "newWhiteList#0",
        "preMBR#0",
        "spliced#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "548": {
      "block": "deleteAppFromWhitelist_while_top@2",
      "stack_in": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0"
      ]
    },
    "550": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "0"
      ]
    },
    "551": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "0",
        "2",
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "0",
        "2"
      ]
    },
    "553": {
      "op": "box_extract",
      "defined_out": [
        "aggregate%concat%1#0",
        "box%box_extract%1#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%box_extract%1#0"
      ]
    },
    "554": {
      "op": "btoi",
      "defined_out": [
        "aggregate%concat%1#0",
        "box%array_length%0#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%array_length%0#0"
      ]
    },
    "555": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%concat%1#0",
        "box%array_length%0#0",
        "i#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%array_length%0#0",
        "i#0"
      ]
    },
    "557": {
      "op": ">",
      "defined_out": [
        "aggregate%concat%1#0",
        "i#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "558": {
      "op": "bz deleteAppFromWhitelist_after_while@6",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "561": {
      "op": "dup",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0"
      ]
    },
    "562": {
      "op": "dig 6",
      "defined_out": [
        "aggregate%concat%1#0",
        "i#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0",
        "index#0"
      ]
    },
    "564": {
      "op": "!=",
      "defined_out": [
        "aggregate%concat%1#0",
        "i#0",
        "index#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "565": {
      "op": "bz deleteAppFromWhitelist_after_if_else@5",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "568": {
      "op": "dup",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0"
      ]
    },
    "569": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "aggregate%concat%1#0",
        "i#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0",
        "8"
      ]
    },
    "570": {
      "op": "*",
      "defined_out": [
        "aggregate%concat%1#0",
        "box%element_offset%1#0",
        "i#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%element_offset%1#0"
      ]
    },
    "571": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%element_offset%1#0",
        "2"
      ]
    },
    "573": {
      "op": "+",
      "defined_out": [
        "aggregate%concat%1#0",
        "box%offset%1#0",
        "i#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%offset%1#0"
      ]
    },
    "574": {
      "op": "dig 4",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%offset%1#0",
        "aggregate%concat%1#0"
      ]
    },
    "576": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "box%offset%1#0"
      ]
    },
    "577": {
      "op": "intc_3 // 8",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "box%offset%1#0",
        "8"
      ]
    },
    "578": {
      "op": "box_extract",
      "defined_out": [
        "aggregate%concat%1#0",
        "box%box_extract%2#0",
        "i#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "box%box_extract%2#0"
      ]
    },
    "579": {
      "op": "btoi",
      "defined_out": [
        "aggregate%concat%1#0",
        "i#0",
        "index#0",
        "values%4#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "values%4#0"
      ]
    },
    "580": {
      "op": "itob",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "index#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "581": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%val_as_bytes%0#0",
        "newWhiteList#0"
      ]
    },
    "583": {
      "op": "dup"
    },
    "584": {
      "op": "uncover 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%val_as_bytes%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0",
        "newWhiteList#0 (copy)"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "newWhiteList#0",
        "newWhiteList#0 (copy)",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "586": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%concat%1#0",
        "concat%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "newWhiteList#0",
        "concat%0#0"
      ]
    },
    "587": {
      "op": "swap",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "newWhiteList#0"
      ]
    },
    "588": {
      "op": "intc_1 // 0",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "newWhiteList#0",
        "0"
      ]
    },
    "589": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%concat%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0"
      ]
    },
    "590": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%1#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "extract_uint16%0#0",
        "1"
      ]
    },
    "591": {
      "op": "+",
      "defined_out": [
        "add%0#0",
        "aggregate%concat%1#0",
        "concat%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "add%0#0"
      ]
    },
    "592": {
      "op": "itob",
      "defined_out": [
        "aggregate%concat%1#0",
        "as_bytes%0#0",
        "concat%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "593": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "as_u16_bytes%0#0",
        "concat%0#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "596": {
      "op": "replace2 0",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "newWhiteList#0"
      ]
    },
    "598": {
      "op": "bury 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "i#0",
        "index#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "600": {
      "block": "deleteAppFromWhitelist_after_if_else@5",
      "stack_in": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ],
      "op": "dup",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0"
      ]
    },
    "601": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "602": {
      "op": "+",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "i#0"
      ]
    },
    "603": {
      "op": "bury 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "605": {
      "op": "b deleteAppFromWhitelist_while_top@2"
    },
    "608": {
      "block": "deleteAppFromWhitelist_after_while@6",
      "stack_in": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "aggregate%concat%1#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0"
      ]
    },
    "610": {
      "op": "dup",
      "defined_out": [
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "aggregate%concat%1#0 (copy)"
      ]
    },
    "611": {
      "op": "box_del",
      "defined_out": [
        "aggregate%concat%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "{box_del}"
      ]
    },
    "612": {
      "op": "pop",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0"
      ]
    },
    "613": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "newWhiteList#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "aggregate%concat%1#0",
        "newWhiteList#0"
      ]
    },
    "615": {
      "op": "box_put",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "616": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%concat%1#0",
        "newWhiteList#0",
        "spliced#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "spliced#0"
      ]
    },
    "618": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "newWhiteList#0",
        "spliced#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "spliced#0",
        "appID#0"
      ]
    },
    "620": {
      "op": "==",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "newWhiteList#0",
        "spliced#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "621": {
      "op": "assert",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "622": {
      "op": "dig 4",
      "defined_out": [
        "aggregate%concat%1#0",
        "appID#0",
        "newWhiteList#0",
        "preMBR#0",
        "spliced#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "preMBR#0"
      ]
    },
    "624": {
      "callsub": "contracts/arc75/arc75.algo.ts::ARC75.sendMBRPayment",
      "op": "callsub sendMBRPayment",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "627": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "aggregate%concat%1#0",
        "appID#0",
        "newWhiteList#0",
        "preMBR#0",
        "spliced#0"
      ],
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0",
        "1"
      ]
    },
    "628": {
      "op": "return",
      "stack_out": [
        "appID#0",
        "index#0",
        "preMBR#0",
        "aggregate%concat%1#0",
        "spliced#0",
        "newWhiteList#0",
        "i#0"
      ]
    },
    "629": {
      "subroutine": "contracts/arc75/arc75.algo.ts::ARC75.verifyMBRPayment",
      "params": {
        "payment#0": "uint64",
        "preMBR#0": "uint64"
      },
      "block": "verifyMBRPayment",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "632": {
      "op": "frame_dig -2",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "634": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "636": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "638": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "639": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%2#0",
        "payment#0 (copy)"
      ]
    },
    "641": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "643": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "645": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "647": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "value%0#0"
      ]
    },
    "648": {
      "op": "frame_dig -1",
      "defined_out": [
        "preMBR#0 (copy)",
        "tmp%2#0",
        "tmp%3#0",
        "value%0#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "value%0#0",
        "preMBR#0 (copy)"
      ]
    },
    "650": {
      "op": "-",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "651": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%6#0"
      ]
    },
    "652": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "653": {
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "stack_out": []
    },
    "654": {
      "retsub": true,
      "op": "retsub"
    },
    "655": {
      "subroutine": "contracts/arc75/arc75.algo.ts::ARC75.sendMBRPayment",
      "params": {
        "preMBR#0": "uint64"
      },
      "block": "sendMBRPayment",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "658": {
      "op": "itxn_begin"
    },
    "659": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "661": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%0#0"
      ]
    },
    "663": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "665": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "value%0#0"
      ]
    },
    "666": {
      "op": "frame_dig -1",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "preMBR#0 (copy)",
        "value%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "value%0#0",
        "preMBR#0 (copy)"
      ]
    },
    "668": {
      "op": "swap",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "preMBR#0 (copy)",
        "value%0#0"
      ]
    },
    "669": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "670": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "672": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "674": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "675": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "677": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "678": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "680": {
      "op": "itxn_submit"
    },
    "681": {
      "retsub": true,
      "op": "retsub"
    }
  }
}