{
  "hints": {
    "useState(uint64,string,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "addToBox(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "addToBoxMap(string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "insertIntoBoxRef(byte[],uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "sayHello(string,uint64)string": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "checkTransaction(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "localBigInt": {
          "type": "bytes",
          "key": "localBigInt"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "globalInt": {
          "type": "uint64",
          "key": "globalInt"
        },
        "globalString": {
          "type": "bytes",
          "key": "customKey"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 1,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "KitchenSinkContract",
    "desc": "",
    "methods": [
      {
        "name": "useState",
        "args": [
          {
            "name": "a",
            "type": "uint64"
          },
          {
            "name": "b",
            "type": "string"
          },
          {
            "name": "c",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "addToBox",
        "args": [
          {
            "name": "x",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "addToBoxMap",
        "args": [
          {
            "name": "x",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "insertIntoBoxRef",
        "args": [
          {
            "name": "content",
            "type": "byte[]"
          },
          {
            "name": "offset",
            "type": "uint64"
          },
          {
            "name": "boxSize",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "sayHello",
        "args": [
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "a",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "string"
        }
      },
      {
        "name": "checkTransaction",
        "args": [
          {
            "name": "pay",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}