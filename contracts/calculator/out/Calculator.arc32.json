{
    "hints": {
        "createApplication()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "doMath(uint64,uint64,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICAvLyBjb250cmFjdHMvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmFsZ28udHM6OAogICAgLy8gZXhwb3J0IGNsYXNzIENhbGN1bGF0b3IgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9hZnRlcl9pZl9lbHNlQDgKICAgIHB1c2hieXRlc3MgMHhiODQ0N2IzNiAweDc2YTdlZjMzIC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiLCBtZXRob2QgImRvTWF0aCh1aW50NjQsdWludDY0LHN0cmluZyl1aW50NjQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2NyZWF0ZUFwcGxpY2F0aW9uX3JvdXRlQDMgbWFpbl9kb01hdGhfcm91dGVANAoKbWFpbl9hZnRlcl9pZl9lbHNlQDg6CiAgICAvLyBjb250cmFjdHMvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmFsZ28udHM6OAogICAgLy8gZXhwb3J0IGNsYXNzIENhbGN1bGF0b3IgZXh0ZW5kcyBDb250cmFjdCB7CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX2RvTWF0aF9yb3V0ZUA0OgogICAgLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjQzCiAgICAvLyBkb01hdGgoYTogdWludDY0LCBiOiB1aW50NjQsIG9wZXJhdGlvbjogc3RyaW5nKTogdWludDY0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjgKICAgIC8vIGV4cG9ydCBjbGFzcyBDYWxjdWxhdG9yIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwogICAgZXh0cmFjdCAyIDAKICAgIC8vIGNvbnRyYWN0cy9jYWxjdWxhdG9yL2NhbGN1bGF0b3IuYWxnby50czo0MwogICAgLy8gZG9NYXRoKGE6IHVpbnQ2NCwgYjogdWludDY0LCBvcGVyYXRpb246IHN0cmluZyk6IHVpbnQ2NCB7CiAgICBjYWxsc3ViIGRvTWF0aAogICAgaXRvYgogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgptYWluX2NyZWF0ZUFwcGxpY2F0aW9uX3JvdXRlQDM6CiAgICAvLyBjb250cmFjdHMvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmFsZ28udHM6OQogICAgLy8gQGFiaW1ldGhvZCh7IG9uQ3JlYXRlOiAicmVxdWlyZSIgfSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCgoKLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjpDYWxjdWxhdG9yLmRvTWF0aChhOiB1aW50NjQsIGI6IHVpbnQ2NCwgb3BlcmF0aW9uOiBieXRlcykgLT4gdWludDY0Ogpkb01hdGg6CiAgICAvLyBjb250cmFjdHMvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmFsZ28udHM6NDMKICAgIC8vIGRvTWF0aChhOiB1aW50NjQsIGI6IHVpbnQ2NCwgb3BlcmF0aW9uOiBzdHJpbmcpOiB1aW50NjQgewogICAgcHJvdG8gMyAxCiAgICAvLyBjb250cmFjdHMvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmFsZ28udHM6NDYKICAgIC8vIGlmIChvcGVyYXRpb24gPT09ICJzdW0iKSB7CiAgICBmcmFtZV9kaWcgLTEKICAgIHB1c2hieXRlcyAic3VtIgogICAgPT0KICAgIGJ6IGRvTWF0aF9lbHNlX2JvZHlAMgogICAgLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjIwCiAgICAvLyByZXR1cm4gYSArIGI7CiAgICBmcmFtZV9kaWcgLTMKICAgIGZyYW1lX2RpZyAtMgogICAgKwogICAgLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjUyCiAgICAvLyByZXR1cm4gcmVzdWx0OwogICAgcmV0c3ViCgpkb01hdGhfZWxzZV9ib2R5QDI6CiAgICAvLyBjb250cmFjdHMvY2FsY3VsYXRvci9jYWxjdWxhdG9yLmFsZ28udHM6NDgKICAgIC8vIH0gZWxzZSBpZiAob3BlcmF0aW9uID09PSAiZGlmZmVyZW5jZSIpIHsKICAgIGZyYW1lX2RpZyAtMQogICAgcHVzaGJ5dGVzICJkaWZmZXJlbmNlIgogICAgPT0KICAgIGFzc2VydCAvLyBJbnZhbGlkIG9wZXJhdGlvbgogICAgLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjMxCiAgICAvLyByZXR1cm4gYSA+PSBiID8gYSAtIGIgOiBiIC0gYTsKICAgIGZyYW1lX2RpZyAtMwogICAgZnJhbWVfZGlnIC0yCiAgICA+PQogICAgYnogZG9NYXRoX3Rlcm5hcnlfZmFsc2VAOQogICAgZnJhbWVfZGlnIC0zCiAgICBmcmFtZV9kaWcgLTIKICAgIC0KICAgIC8vIGNvbnRyYWN0cy9jYWxjdWxhdG9yL2NhbGN1bGF0b3IuYWxnby50czo1MgogICAgLy8gcmV0dXJuIHJlc3VsdDsKICAgIHJldHN1YgoKZG9NYXRoX3Rlcm5hcnlfZmFsc2VAOToKICAgIC8vIGNvbnRyYWN0cy9jYWxjdWxhdG9yL2NhbGN1bGF0b3IuYWxnby50czozMQogICAgLy8gcmV0dXJuIGEgPj0gYiA/IGEgLSBiIDogYiAtIGE7CiAgICBmcmFtZV9kaWcgLTIKICAgIGZyYW1lX2RpZyAtMwogICAgLQogICAgLy8gY29udHJhY3RzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5hbGdvLnRzOjUyCiAgICAvLyByZXR1cm4gcmVzdWx0OwogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Calculator",
        "methods": [
            {
                "name": "createApplication",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "doMath",
                "args": [
                    {
                        "type": "uint64",
                        "name": "a",
                        "desc": "The first number"
                    },
                    {
                        "type": "uint64",
                        "name": "b",
                        "desc": "The second number"
                    },
                    {
                        "type": "string",
                        "name": "operation",
                        "desc": "The operation to perform. Can be either 'sum' or 'difference'"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64",
                    "desc": "The result of the operation"
                },
                "desc": "A method that takes two numbers and does either addition or subtraction"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}