{
    "name": "ZkWhitelistContract",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [
                {
                    "type": "string",
                    "name": "name"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "UpdateApplication",
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "optInOrOut",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn",
                    "CloseOut"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "addAddressToWhitelist",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                },
                {
                    "type": "address[]",
                    "name": "proof"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "isOnWhitelist",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "verifyProof",
            "args": [
                {
                    "type": "uint64",
                    "name": "appId"
                },
                {
                    "type": "address[]",
                    "name": "proof"
                },
                {
                    "type": "address[]",
                    "name": "publicInputs"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 1
            },
            "local": {
                "ints": 1,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "appName": {
                    "keyType": "AVMString",
                    "valueType": "string",
                    "key": "YXBwTmFtZQ=="
                }
            },
            "local": {
                "whiteList": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "d2hpdGVMaXN0"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        424
                    ],
                    "errorMessage": "Bytes has valid prefix"
                },
                {
                    "pc": [
                        24
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "OnCompletion must be one of OptIn, CloseOut && can only call when not creating"
                },
                {
                    "pc": [
                        93
                    ],
                    "errorMessage": "OnCompletion must be one of UpdateApplication, DeleteApplication && can only call when not creating"
                },
                {
                    "pc": [
                        348
                    ],
                    "errorMessage": "check LocalState exists"
                }
            ],
            "pcOffsetMethod": "cblocks"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAQAGACYEBBUffHUDBoEBCXdoaXRlTGlzdAEAggIEoOgYcgSTAKriNhoAjgIAPgA0MRkURDEYQQAdggMEy3fAegRRdjfGBPEHc/E2GgCOAwA8AQ0BKwCABCDfOlQ2GgCOAQAZACIxGZAkGjEYEEMiMRmQgTAaMRgQREIAD4AHYXBwTmFtZTYaAWciQzIJMQASQzYaATYaAoHy7AgyDA1BABWxJLIQgQWyGSmyHimyHyOyAbNC/+GBIK9LAoAgMGROcuExoCm4UEW2gYFYXSgz6Eh5uXCRQ+H1k/AAAAGqq4ACAAFMUCVLAk8CiACoRgIjU0AAI4AbABlQcm9vZiB2ZXJpZmljYXRpb24gZmFpbGVkKExQsCJDMQBLAhNBADeAMgAwU2VuZGVyIGFkZHJlc3MgZG9lcyBub3QgbWF0Y2ggYXV0aG9yaXplZCBhZGRyZXNzQv+7SwEqImaAAgAAQv+vNhoBSTIIYUAABysoTFCwIkNJIypjRCsjTwJUQv/tNhoBFzYaAjYaA4gACEYCKExQsCJDigMDsSOyGYAEijzserIai/6yGov/shqL/bIYJLIQI7IBs7Q+SVcEAExXAAQoEkSL/ov/iQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {
        "VERIFIER_APP_ID": {
            "type": "AVMUint64"
        }
    }
}