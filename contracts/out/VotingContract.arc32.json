{
    "hints": {
        "setTopic(string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "vote(pay)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getVotes()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAwCiAgICBieXRlY2Jsb2NrICJ2b3RlcyIgInRvcGljIiAweDE1MWY3Yzc1ICJ2b3RlZCIKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoxNgogICAgLy8ga2V5OiBCeXRlcygidG9waWMiKSwKICAgIGJ5dGVjXzEgLy8gInRvcGljIgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjE1CiAgICAvLyBpbml0aWFsVmFsdWU6IEJ5dGVzKCJkZWZhdWx0X3RvcGljIiksCiAgICBwdXNoYnl0ZXMgImRlZmF1bHRfdG9waWMiCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MTQtMTcKICAgIC8vIHRvcGljID0gR2xvYmFsU3RhdGUoewogICAgLy8gICBpbml0aWFsVmFsdWU6IEJ5dGVzKCJkZWZhdWx0X3RvcGljIiksCiAgICAvLyAgIGtleTogQnl0ZXMoInRvcGljIiksCiAgICAvLyB9KTsKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MTgKICAgIC8vIHZvdGVzID0gR2xvYmFsU3RhdGUoeyBpbml0aWFsVmFsdWU6IFVpbnQ2NCgwKSwga2V5OiBCeXRlcygidm90ZXMiKSB9KTsKICAgIGJ5dGVjXzAgLy8gInZvdGVzIgogICAgaW50Y18xIC8vIDAKICAgIGFwcF9nbG9iYWxfcHV0CgptYWluX2FmdGVyX2lmX2Vsc2VAMjoKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoxMwogICAgLy8gZXhwb3J0IGRlZmF1bHQgY2xhc3MgVm90aW5nQ29udHJhY3QgZXh0ZW5kcyBhcmM0LkNvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0AxMAogICAgcHVzaGJ5dGVzcyAweDVhMGMzODQyIDB4ZjNjOTg2YjMgMHhlOGY0NzBhYiAvLyBtZXRob2QgInNldFRvcGljKHN0cmluZyl2b2lkIiwgbWV0aG9kICJ2b3RlKHBheSlib29sIiwgbWV0aG9kICJnZXRWb3RlcygpdWludDY0IgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9zZXRUb3BpY19yb3V0ZUA1IG1haW5fdm90ZV9yb3V0ZUA2IG1haW5fZ2V0Vm90ZXNfcm91dGVANwoKbWFpbl9hZnRlcl9pZl9lbHNlQDE0OgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjEzCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBWb3RpbmdDb250cmFjdCBleHRlbmRzIGFyYzQuQ29udHJhY3QgewogICAgaW50Y18xIC8vIDAKICAgIHJldHVybgoKbWFpbl9nZXRWb3Rlc19yb3V0ZUA3OgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjQzCiAgICAvLyBAYXJjNC5hYmltZXRob2QoeyByZWFkb25seTogdHJ1ZSB9KQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIGdldFZvdGVzCiAgICBieXRlY18yIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX3ZvdGVfcm91dGVANjoKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjEzCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBWb3RpbmdDb250cmFjdCBleHRlbmRzIGFyYzQuQ29udHJhY3QgewogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludGNfMCAvLyAxCiAgICAtCiAgICBkdXAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnRjXzAgLy8gcGF5CiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgcGF5CiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MjUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIHZvdGUKICAgIGJ5dGVjXzIgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fc2V0VG9waWNfcm91dGVANToKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyMQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjEzCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBWb3RpbmdDb250cmFjdCBleHRlbmRzIGFyYzQuQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgZXh0cmFjdCAyIDAKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyMQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKCkKICAgIGNhbGxzdWIgc2V0VG9waWMKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDEwOgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjEzCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBWb3RpbmdDb250cmFjdCBleHRlbmRzIGFyYzQuQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxNAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6OlZvdGluZ0NvbnRyYWN0LnNldFRvcGljKHRvcGljOiBieXRlcykgLT4gdm9pZDoKc2V0VG9waWM6CiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MjEtMjIKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICAvLyBwdWJsaWMgc2V0VG9waWModG9waWM6IHN0cmluZyk6IHZvaWQgewogICAgcHJvdG8gMSAwCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MTYKICAgIC8vIGtleTogQnl0ZXMoInRvcGljIiksCiAgICBieXRlY18xIC8vICJ0b3BpYyIKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyMwogICAgLy8gdGhpcy50b3BpYy52YWx1ZSA9IEJ5dGVzKHRvcGljKTsKICAgIGZyYW1lX2RpZyAtMQogICAgYXBwX2dsb2JhbF9wdXQKICAgIHJldHN1YgoKCi8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czo6Vm90aW5nQ29udHJhY3Qudm90ZShwYXk6IHVpbnQ2NCkgLT4gYnl0ZXM6CnZvdGU6CiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MjUtMjYKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCgpCiAgICAvLyBwdWJsaWMgdm90ZShwYXk6IGd0eG4uUGF5bWVudFR4bik6IGFyYzQuQm9vbCB7CiAgICBwcm90byAxIDEKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyNwogICAgLy8gYXNzZXJ0KG9wLkdsb2JhbC5ncm91cFNpemUgPT09IDIsICJFeHBlY3RlZCAyIHRyYW5zYWN0aW9ucyIpOwogICAgZ2xvYmFsIEdyb3VwU2l6ZQogICAgcHVzaGludCAyIC8vIDIKICAgID09CiAgICBhc3NlcnQgLy8gRXhwZWN0ZWQgMiB0cmFuc2FjdGlvbnMKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyOAogICAgLy8gYXNzZXJ0KHBheS5hbW91bnQgPT09IDEwXzAwMCwgIkluY29ycmVjdCBwYXltZW50IGFtb3VudCIpOwogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBBbW91bnQKICAgIHB1c2hpbnQgMTAwMDAgLy8gMTAwMDAKICAgID09CiAgICBhc3NlcnQgLy8gSW5jb3JyZWN0IHBheW1lbnQgYW1vdW50CiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MzAKICAgIC8vIHBheS5zZW5kZXIgPT09IFR4bi5zZW5kZXIsCiAgICBmcmFtZV9kaWcgLTEKICAgIGd0eG5zIFNlbmRlcgogICAgdHhuIFNlbmRlcgogICAgPT0KICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoyOS0zMgogICAgLy8gYXNzZXJ0KAogICAgLy8gICBwYXkuc2VuZGVyID09PSBUeG4uc2VuZGVyLAogICAgLy8gICAiUGF5bWVudCBzZW5kZXIgbXVzdCBtYXRjaCB0cmFuc2FjdGlvbiBzZW5kZXIiLAogICAgLy8gKTsKICAgIGFzc2VydCAvLyBQYXltZW50IHNlbmRlciBtdXN0IG1hdGNoIHRyYW5zYWN0aW9uIHNlbmRlcgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjM0CiAgICAvLyBpZiAodGhpcy52b3RlZChUeG4uc2VuZGVyKS5oYXNWYWx1ZSkgewogICAgdHhuIFNlbmRlcgogICAgaW50Y18xIC8vIDAKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoxOQogICAgLy8gdm90ZWQgPSBMb2NhbFN0YXRlPHVpbnQ2ND4oeyBrZXk6IEJ5dGVzKCJ2b3RlZCIpIH0pOwogICAgYnl0ZWNfMyAvLyAidm90ZWQiCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MzQKICAgIC8vIGlmICh0aGlzLnZvdGVkKFR4bi5zZW5kZXIpLmhhc1ZhbHVlKSB7CiAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICBidXJ5IDEKICAgIGJ6IHZvdGVfYWZ0ZXJfaWZfZWxzZUAyCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MzUKICAgIC8vIHJldHVybiBuZXcgYXJjNC5Cb29sKGZhbHNlKTsgLy8gQWxyZWFkeSB2b3RlZAogICAgcHVzaGJ5dGVzIDB4MDAKICAgIHJldHN1YgoKdm90ZV9hZnRlcl9pZl9lbHNlQDI6CiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MTgKICAgIC8vIHZvdGVzID0gR2xvYmFsU3RhdGUoeyBpbml0aWFsVmFsdWU6IFVpbnQ2NCgwKSwga2V5OiBCeXRlcygidm90ZXMiKSB9KTsKICAgIGludGNfMSAvLyAwCiAgICBieXRlY18wIC8vICJ2b3RlcyIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgR2xvYmFsU3RhdGUgZXhpc3RzCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MzgKICAgIC8vIHRoaXMudm90ZXMudmFsdWUgPSB0aGlzLnZvdGVzLnZhbHVlICsgMTsKICAgIGludGNfMCAvLyAxCiAgICArCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MTgKICAgIC8vIHZvdGVzID0gR2xvYmFsU3RhdGUoeyBpbml0aWFsVmFsdWU6IFVpbnQ2NCgwKSwga2V5OiBCeXRlcygidm90ZXMiKSB9KTsKICAgIGJ5dGVjXzAgLy8gInZvdGVzIgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjM4CiAgICAvLyB0aGlzLnZvdGVzLnZhbHVlID0gdGhpcy52b3Rlcy52YWx1ZSArIDE7CiAgICBzd2FwCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjM5CiAgICAvLyB0aGlzLnZvdGVkKFR4bi5zZW5kZXIpLnZhbHVlID0gMTsKICAgIHR4biBTZW5kZXIKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoxOQogICAgLy8gdm90ZWQgPSBMb2NhbFN0YXRlPHVpbnQ2ND4oeyBrZXk6IEJ5dGVzKCJ2b3RlZCIpIH0pOwogICAgYnl0ZWNfMyAvLyAidm90ZWQiCiAgICAvLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6MzkKICAgIC8vIHRoaXMudm90ZWQoVHhuLnNlbmRlcikudmFsdWUgPSAxOwogICAgaW50Y18wIC8vIDEKICAgIGFwcF9sb2NhbF9wdXQKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czo0MAogICAgLy8gcmV0dXJuIG5ldyBhcmM0LkJvb2wodHJ1ZSk7CiAgICBwdXNoYnl0ZXMgMHg4MAogICAgcmV0c3ViCgoKLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjpWb3RpbmdDb250cmFjdC5nZXRWb3RlcygpIC0+IGJ5dGVzOgpnZXRWb3RlczoKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czoxOAogICAgLy8gdm90ZXMgPSBHbG9iYWxTdGF0ZSh7IGluaXRpYWxWYWx1ZTogVWludDY0KDApLCBrZXk6IEJ5dGVzKCJ2b3RlcyIpIH0pOwogICAgaW50Y18xIC8vIDAKICAgIGJ5dGVjXzAgLy8gInZvdGVzIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBHbG9iYWxTdGF0ZSBleGlzdHMKICAgIC8vIGNvbnRyYWN0cy92b3RpbmcuYWxnby50czo0NQogICAgLy8gcmV0dXJuIG5ldyBhcmM0LlVpbnRONjQodGhpcy52b3Rlcy52YWx1ZSk7CiAgICBpdG9iCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBjb250cmFjdHMvdm90aW5nLmFsZ28udHM6OlZvdGluZ0NvbnRyYWN0LmNsZWFyU3RhdGVQcm9ncmFtKCkgLT4gdWludDY0OgptYWluOgogICAgLy8gY29udHJhY3RzL3ZvdGluZy5hbGdvLnRzOjQ5CiAgICAvLyByZXR1cm4gdHJ1ZTsKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "topic": {
                    "type": "bytes",
                    "key": "topic"
                },
                "votes": {
                    "type": "uint64",
                    "key": "votes"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "voted": {
                    "type": "uint64",
                    "key": "voted"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "VotingContract",
        "methods": [
            {
                "name": "setTopic",
                "args": [
                    {
                        "type": "string",
                        "name": "topic"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "vote",
                "args": [
                    {
                        "type": "pay",
                        "name": "pay"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "getVotes",
                "args": [],
                "readonly": true,
                "returns": {
                    "type": "uint64"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}