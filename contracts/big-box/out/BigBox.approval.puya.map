{
  "version": 3,
  "sources": [
    "/home/parallels/dev/puya-ts-demo/contracts/big-box/big-box.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CE;AAAmD;AAAnD;AATF;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAWG;AAAA;AAYD;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMqC;AApBrC;AAoBqC;AAAA;AACZ;AAAA;;AAAA;AAAsB;AAAtB;AAEI;AAAA;AAAA;;AAAA;AAAA;AAGjB;AAHiB;AAAA;;AAAA;AAAA;AAQgB;;AAAA;AAAA;;AAApC;AAAP;AAEA;;AAAA;AAAA;AAEmC;AAAT;AAnC5B;AAmCE;AAAA;AAGE;;AAAW;;;AAAX;AACC;;AAAW;AAAX;AAAD;;;;;AAAA;AADA;AAEA;;AAAA;;;;AAAA;AAFA;AAGA;;AAAa;;;AAAb;AAHA;AAKF;;AAAA;;AACmB;;AADnB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AA7BF;;AA4CA;;;AAAA;;;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;AAM8D;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAC5C;AAAA;;;AAAW;AAApB;AAAP;AACgB;AAAA;AAAT;AAAA;;;AAAmD;AAAA;AAAA;AAArB;;AAAA;AAA9B;;;;AAAP;AAEA;;AAAA;;;AACiB;;AAAA;AAAA;AAAA;;AACe;;AAAA;AAAA;AAAtB;AAAA;;;AAAqC;AAAA;;AAAA;AAD7C;;AAAA;AAAA;;AAKa;;AAAA;AAAf;;AAAA;;AAAA;AAhBF;AAAA;AAY2D;;;;;;;;;;;AAc3D;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAE2D;AAAA;AAAM;;;AAAA;AAE7C;;;AAAX;AAAA;;;AAAoB;;AAAW;AAAX;AAApB;;;AAA4C;;AAAW;AAAX;AAA5C;;;;AAAP;AACO;AAAkB;AAAlB;AAAP;AAEA;;AAAA;;AAAA;;AAAA;AAPF;AAAA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8"
    },
    "6": {
      "op": "bytecblock \"currentIndex\" 0x00 0x02"
    },
    "25": {
      "op": "txn ApplicationID",
      "defined_out": [
        "reinterpret_bool%0#0"
      ],
      "stack_out": [
        "reinterpret_bool%0#0"
      ]
    },
    "27": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "30": {
      "op": "bytec_0 // \"currentIndex\"",
      "defined_out": [
        "\"currentIndex\""
      ],
      "stack_out": [
        "\"currentIndex\""
      ]
    },
    "31": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"currentIndex\"",
        "0"
      ],
      "stack_out": [
        "\"currentIndex\"",
        "0"
      ]
    },
    "32": {
      "op": "app_global_put",
      "stack_out": []
    },
    "33": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "35": {
      "op": "!",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "36": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "37": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "39": {
      "op": "bz main_create_NoOp@9",
      "stack_out": []
    },
    "42": {
      "op": "pushbytess 0xa05b5669 0x1b7dfa35 0xbf3856f8 // method \"startUpload(string,uint64,uint64,pay)void\", method \"upload(string,uint64,uint64,byte[])void\", method \"setStatus(string,uint8)void\"",
      "defined_out": [
        "Method(setStatus(string,uint8)void)",
        "Method(startUpload(string,uint64,uint64,pay)void)",
        "Method(upload(string,uint64,uint64,byte[])void)"
      ],
      "stack_out": [
        "Method(startUpload(string,uint64,uint64,pay)void)",
        "Method(upload(string,uint64,uint64,byte[])void)",
        "Method(setStatus(string,uint8)void)"
      ]
    },
    "59": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(setStatus(string,uint8)void)",
        "Method(startUpload(string,uint64,uint64,pay)void)",
        "Method(upload(string,uint64,uint64,byte[])void)",
        "tmp%4#0"
      ],
      "stack_out": [
        "Method(startUpload(string,uint64,uint64,pay)void)",
        "Method(upload(string,uint64,uint64,byte[])void)",
        "Method(setStatus(string,uint8)void)",
        "tmp%4#0"
      ]
    },
    "62": {
      "op": "match startUpload upload setStatus",
      "stack_out": []
    },
    "70": {
      "op": "err"
    },
    "71": {
      "block": "main_create_NoOp@9",
      "stack_in": [],
      "op": "pushbytes 0xb8447b36 // method \"createApplication()void\"",
      "defined_out": [
        "Method(createApplication()void)"
      ],
      "stack_out": [
        "Method(createApplication()void)"
      ]
    },
    "77": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "tmp%5#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "tmp%5#0"
      ]
    },
    "80": {
      "op": "match main_createApplication_route@10",
      "stack_out": []
    },
    "84": {
      "op": "err"
    },
    "85": {
      "block": "main_createApplication_route@10",
      "stack_in": [],
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "86": {
      "op": "return",
      "stack_out": []
    },
    "87": {
      "subroutine": "contracts/big-box/big-box.algo.ts::BigBox.startUpload[routing]",
      "params": {},
      "block": "startUpload",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "90": {
      "op": "extract 2 0",
      "defined_out": [
        "dataIdentifier#0"
      ],
      "stack_out": [
        "dataIdentifier#0"
      ]
    },
    "93": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "dataIdentifier#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "96": {
      "op": "btoi",
      "defined_out": [
        "dataIdentifier#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0"
      ]
    },
    "97": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "100": {
      "op": "btoi",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0"
      ]
    },
    "101": {
      "op": "txn GroupIndex",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "numBoxes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "tmp%3#0"
      ]
    },
    "103": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dataIdentifier#0",
        "endBoxSize#0",
        "numBoxes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "tmp%3#0",
        "1"
      ]
    },
    "104": {
      "op": "-",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0"
      ]
    },
    "105": {
      "op": "dup",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "mbrPayment#0 (copy)",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "106": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "gtxn_type%0#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "gtxn_type%0#0"
      ]
    },
    "108": {
      "op": "intc_0 // pay",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "gtxn_type%0#0",
        "mbrPayment#0",
        "numBoxes#0",
        "pay"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "109": {
      "op": "==",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "gtxn_type_matches%0#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "110": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0"
      ]
    },
    "111": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "0"
      ]
    },
    "112": {
      "op": "bytec_0 // \"currentIndex\"",
      "defined_out": [
        "\"currentIndex\"",
        "0",
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "0",
        "\"currentIndex\""
      ]
    },
    "113": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "maybe_exists%0#0",
        "mbrPayment#0",
        "numBoxes#0",
        "startBox#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0",
        "maybe_exists%0#0"
      ]
    },
    "114": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0"
      ]
    },
    "115": {
      "op": "dup",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "startBox#0",
        "startBox#0 (copy)"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0",
        "startBox#0 (copy)"
      ]
    },
    "116": {
      "op": "dig 4",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "numBoxes#0 (copy)",
        "startBox#0",
        "startBox#0 (copy)"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0",
        "startBox#0 (copy)",
        "numBoxes#0 (copy)"
      ]
    },
    "118": {
      "op": "+",
      "defined_out": [
        "dataIdentifier#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "startBox#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0",
        "tmp%0#1"
      ]
    },
    "119": {
      "op": "intc_0 // 1",
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0",
        "tmp%0#1",
        "1"
      ]
    },
    "120": {
      "op": "-",
      "defined_out": [
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "startBox#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "startBox#0",
        "endBox#0"
      ]
    },
    "121": {
      "op": "swap",
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "startBox#0"
      ]
    },
    "122": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "123": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBox#0 (copy)",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%val_as_bytes%0#0",
        "endBox#0 (copy)"
      ]
    },
    "125": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%val_as_bytes%1#0"
      ]
    },
    "126": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%head%1#0"
      ]
    },
    "127": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%head%1#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%head%1#0",
        "0x00"
      ]
    },
    "128": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%2#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%head%2#0"
      ]
    },
    "129": {
      "op": "dig 3",
      "defined_out": [
        "aggregate%head%2#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "endBoxSize#0 (copy)",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%head%2#0",
        "endBoxSize#0 (copy)"
      ]
    },
    "131": {
      "op": "itob",
      "defined_out": [
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%2#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "aggregate%head%2#0",
        "aggregate%val_as_bytes%2#0"
      ]
    },
    "132": {
      "op": "concat",
      "defined_out": [
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "metadata#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0"
      ]
    },
    "133": {
      "op": "dig 5",
      "defined_out": [
        "dataIdentifier#0",
        "dataIdentifier#0 (copy)",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "metadata#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0",
        "dataIdentifier#0 (copy)"
      ]
    },
    "135": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "maybe_exists%1#0",
        "mbrPayment#0",
        "metadata#0",
        "numBoxes#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0",
        "_%0#0",
        "maybe_exists%1#0"
      ]
    },
    "136": {
      "op": "bury 1",
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0",
        "maybe_exists%1#0"
      ]
    },
    "138": {
      "op": "!",
      "defined_out": [
        "dataIdentifier#0",
        "endBox#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "metadata#0",
        "numBoxes#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0",
        "tmp%3#1"
      ]
    },
    "139": {
      "op": "assert",
      "stack_out": [
        "dataIdentifier#0",
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0"
      ]
    },
    "140": {
      "op": "uncover 5",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "metadata#0",
        "dataIdentifier#0"
      ]
    },
    "142": {
      "op": "swap",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "dataIdentifier#0",
        "metadata#0"
      ]
    },
    "143": {
      "op": "box_put",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0"
      ]
    },
    "144": {
      "op": "intc_0 // 1",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "endBox#0",
        "1"
      ]
    },
    "145": {
      "op": "+",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%4#0"
      ]
    },
    "146": {
      "op": "bytec_0 // \"currentIndex\"",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%4#0",
        "\"currentIndex\""
      ]
    },
    "147": {
      "op": "swap",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "\"currentIndex\"",
        "tmp%4#0"
      ]
    },
    "148": {
      "op": "app_global_put",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0"
      ]
    },
    "149": {
      "op": "dig 2",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0 (copy)"
      ]
    },
    "151": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "numBoxes#0 (copy)"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0 (copy)",
        "2500"
      ]
    },
    "154": {
      "op": "*",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%5#0"
      ]
    },
    "155": {
      "op": "dig 3",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%5#0",
        "numBoxes#0 (copy)"
      ]
    },
    "157": {
      "op": "intc_0 // 1",
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%5#0",
        "numBoxes#0 (copy)",
        "1"
      ]
    },
    "158": {
      "op": "-",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "159": {
      "op": "pushint 13107200 // 13107200",
      "defined_out": [
        "13107200",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%5#0",
        "tmp%6#0",
        "13107200"
      ]
    },
    "164": {
      "op": "*",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%5#0",
        "tmp%8#0"
      ]
    },
    "165": {
      "op": "+",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "numBoxes#0",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%9#0"
      ]
    },
    "166": {
      "op": "uncover 3",
      "stack_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%9#0",
        "numBoxes#0"
      ]
    },
    "168": {
      "op": "pushint 25600 // 25600",
      "defined_out": [
        "25600",
        "endBoxSize#0",
        "mbrPayment#0",
        "numBoxes#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%9#0",
        "numBoxes#0",
        "25600"
      ]
    },
    "172": {
      "op": "*",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "173": {
      "op": "+",
      "defined_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%12#0"
      ]
    },
    "174": {
      "op": "uncover 2",
      "stack_out": [
        "mbrPayment#0",
        "tmp%12#0",
        "endBoxSize#0"
      ]
    },
    "176": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "endBoxSize#0",
        "mbrPayment#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "mbrPayment#0",
        "tmp%12#0",
        "endBoxSize#0",
        "400"
      ]
    },
    "179": {
      "op": "*",
      "defined_out": [
        "mbrPayment#0",
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "mbrPayment#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "180": {
      "op": "+",
      "defined_out": [
        "mbrPayment#0",
        "totalCost#0"
      ],
      "stack_out": [
        "mbrPayment#0",
        "totalCost#0"
      ]
    },
    "181": {
      "op": "dig 1",
      "stack_out": [
        "mbrPayment#0",
        "totalCost#0",
        "mbrPayment#0 (copy)"
      ]
    },
    "183": {
      "op": "gtxns Receiver",
      "defined_out": [
        "mbrPayment#0",
        "tmp%15#0",
        "totalCost#0"
      ],
      "stack_out": [
        "mbrPayment#0",
        "totalCost#0",
        "tmp%15#0"
      ]
    },
    "185": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "mbrPayment#0",
        "tmp%15#0",
        "tmp%16#0",
        "totalCost#0"
      ],
      "stack_out": [
        "mbrPayment#0",
        "totalCost#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "187": {
      "op": "==",
      "defined_out": [
        "mbrPayment#0",
        "tmp%17#0",
        "totalCost#0"
      ],
      "stack_out": [
        "mbrPayment#0",
        "totalCost#0",
        "tmp%17#0"
      ]
    },
    "188": {
      "op": "uncover 2",
      "stack_out": [
        "totalCost#0",
        "tmp%17#0",
        "mbrPayment#0"
      ]
    },
    "190": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%17#0",
        "tmp%18#0",
        "totalCost#0"
      ],
      "stack_out": [
        "totalCost#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "192": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%17#0",
        "tmp%18#0",
        "totalCost#0"
      ]
    },
    "194": {
      "op": "==",
      "defined_out": [
        "tmp%17#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%17#0",
        "tmp%19#0"
      ]
    },
    "195": {
      "op": "&&",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "196": {
      "error": "assert target is match for conditions",
      "op": "return // on error: assert target is match for conditions",
      "stack_out": []
    },
    "197": {
      "subroutine": "contracts/big-box/big-box.algo.ts::BigBox.upload[routing]",
      "params": {},
      "block": "upload",
      "stack_in": [],
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "198": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "201": {
      "op": "extract 2 0",
      "defined_out": [
        "dataIdentifier#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "dataIdentifier#0"
      ]
    },
    "204": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "dataIdentifier#0",
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "dataIdentifier#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "207": {
      "op": "btoi",
      "defined_out": [
        "boxIndex#0",
        "dataIdentifier#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "dataIdentifier#0",
        "boxIndex#0"
      ]
    },
    "208": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "dataIdentifier#0",
        "boxIndex#0",
        "boxIndex#0 (copy)"
      ]
    },
    "209": {
      "op": "uncover 2",
      "defined_out": [
        "boxIndex#0",
        "dataIdentifier#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "boxIndex#0",
        "dataIdentifier#0"
      ]
    },
    "211": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "boxIndex#0",
        "dataIdentifier#0",
        "reinterpret_Encoded(uint64)%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "boxIndex#0",
        "dataIdentifier#0",
        "reinterpret_Encoded(uint64)%1#0"
      ]
    },
    "214": {
      "op": "btoi",
      "defined_out": [
        "boxIndex#0",
        "dataIdentifier#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "boxIndex#0",
        "dataIdentifier#0",
        "offset#0"
      ]
    },
    "215": {
      "op": "cover 2",
      "defined_out": [
        "boxIndex#0",
        "dataIdentifier#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "boxIndex#0",
        "dataIdentifier#0"
      ]
    },
    "217": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "boxIndex#0",
        "dataIdentifier#0",
        "offset#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "boxIndex#0",
        "dataIdentifier#0",
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "220": {
      "op": "extract 2 0",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "dataIdentifier#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "boxIndex#0",
        "dataIdentifier#0",
        "data#0"
      ]
    },
    "223": {
      "op": "cover 2",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "dataIdentifier#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "boxIndex#0",
        "dataIdentifier#0"
      ]
    },
    "225": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%1#0",
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "boxIndex#0",
        "metadata#0",
        "aggregate%box_get%1#0"
      ]
    },
    "226": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "boxIndex#0",
        "aggregate%box_get%1#0",
        "metadata#0"
      ]
    },
    "227": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "boxIndex#0",
        "aggregate%box_get%1#0",
        "metadata#0",
        "metadata#0 (copy)"
      ]
    },
    "228": {
      "op": "cover 2",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "boxIndex#0",
        "metadata#0",
        "aggregate%box_get%1#0",
        "metadata#0"
      ]
    },
    "230": {
      "op": "cover 3",
      "defined_out": [
        "aggregate%box_get%1#0",
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "aggregate%box_get%1#0"
      ]
    },
    "232": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0"
      ]
    },
    "233": {
      "op": "dup",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "metadata#0 (copy)",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "metadata#0 (copy)"
      ]
    },
    "234": {
      "op": "extract 16 1",
      "defined_out": [
        "aggregate%extract%0#0",
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "aggregate%extract%0#0"
      ]
    },
    "237": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "aggregate%extract%0#0",
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "aggregate%extract%0#0",
        "0x00"
      ]
    },
    "238": {
      "op": "==",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "tmp%0#1"
      ]
    },
    "239": {
      "op": "assert",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0"
      ]
    },
    "240": {
      "op": "intc_1 // 0",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "0"
      ]
    },
    "241": {
      "op": "extract_uint64",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0",
        "values%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "values%0#0"
      ]
    },
    "242": {
      "op": ">=",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "tmp%1#1"
      ]
    },
    "243": {
      "op": "bz upload_bool_false@4",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "246": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "metadata#0"
      ]
    },
    "247": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "metadata#0",
        "8"
      ]
    },
    "248": {
      "op": "extract_uint64",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0",
        "values%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "values%1#0"
      ]
    },
    "249": {
      "op": "dig 4",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "values%1#0",
        "boxIndex#0"
      ]
    },
    "251": {
      "op": ">=",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "tmp%2#1"
      ]
    },
    "252": {
      "op": "bz upload_bool_false@4",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "255": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0",
        "boxIndex#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "and_result%0#0"
      ]
    },
    "256": {
      "block": "upload_bool_merge@5",
      "stack_in": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "and_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "257": {
      "op": "dig 2",
      "defined_out": [
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "offset#0"
      ]
    },
    "259": {
      "op": "bnz upload_after_if_else@10",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "262": {
      "op": "dig 3",
      "defined_out": [
        "boxIndex#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0"
      ]
    },
    "264": {
      "op": "dup",
      "defined_out": [
        "boxIndex#0",
        "boxIndex#0 (copy)",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "boxIndex#0 (copy)"
      ]
    },
    "265": {
      "op": "itob",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%0#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "encoded_value%0#0"
      ]
    },
    "266": {
      "op": "bury 6",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%0#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0"
      ]
    },
    "268": {
      "op": "dig 1",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%0#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0"
      ]
    },
    "270": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "boxIndex#0",
        "encoded_value%0#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "metadata#0",
        "8"
      ]
    },
    "271": {
      "op": "extract_uint64",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%0#0",
        "metadata#0",
        "offset#0",
        "values%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0",
        "values%2#0"
      ]
    },
    "272": {
      "op": "==",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%0#0",
        "metadata#0",
        "offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "tmp%4#0"
      ]
    },
    "273": {
      "op": "bz upload_ternary_false@8",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "276": {
      "op": "dup",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "metadata#0"
      ]
    },
    "277": {
      "op": "pushint 17 // 17",
      "defined_out": [
        "17",
        "boxIndex#0",
        "encoded_value%0#0",
        "metadata#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "metadata#0",
        "17"
      ]
    },
    "279": {
      "op": "extract_uint64",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%0#0",
        "metadata#0",
        "offset#0",
        "ternary_result%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "ternary_result%0#1"
      ]
    },
    "280": {
      "block": "upload_ternary_merge@9",
      "stack_in": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "ternary_result%0#1"
      ],
      "op": "dig 5",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "ternary_result%0#1",
        "encoded_value%0#0"
      ]
    },
    "282": {
      "op": "swap",
      "defined_out": [
        "encoded_value%0#0",
        "ternary_result%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "encoded_value%0#0",
        "ternary_result%0#1"
      ]
    },
    "283": {
      "op": "box_create",
      "defined_out": [
        "encoded_value%0#0",
        "{box_create}"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "{box_create}"
      ]
    },
    "284": {
      "op": "pop",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "285": {
      "block": "upload_after_if_else@10",
      "stack_in": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "boxIndex#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "boxIndex#0"
      ]
    },
    "287": {
      "op": "itob",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "encoded_value%1#0"
      ]
    },
    "288": {
      "op": "dig 3",
      "defined_out": [
        "boxIndex#0",
        "encoded_value%1#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "encoded_value%1#0",
        "offset#0"
      ]
    },
    "290": {
      "op": "dig 3",
      "defined_out": [
        "boxIndex#0",
        "data#0",
        "encoded_value%1#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "encoded_value%1#0",
        "offset#0",
        "data#0"
      ]
    },
    "292": {
      "op": "box_replace",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "293": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "boxIndex#0",
        "data#0",
        "offset#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "1"
      ]
    },
    "294": {
      "op": "return",
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ]
    },
    "295": {
      "block": "upload_ternary_false@8",
      "stack_in": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ],
      "op": "pushint 32768 // 32768",
      "defined_out": [
        "ternary_result%0#1"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "ternary_result%0#1"
      ]
    },
    "299": {
      "op": "b upload_ternary_merge@9"
    },
    "302": {
      "block": "upload_bool_false@4",
      "stack_in": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "boxIndex#0",
        "offset#0",
        "data#0",
        "metadata#0",
        "and_result%0#0"
      ]
    },
    "303": {
      "op": "b upload_bool_merge@5"
    },
    "306": {
      "subroutine": "contracts/big-box/big-box.algo.ts::BigBox.setStatus[routing]",
      "params": {},
      "block": "setStatus",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "309": {
      "op": "extract 2 0",
      "defined_out": [
        "dataIdentifier#0"
      ],
      "stack_out": [
        "dataIdentifier#0"
      ]
    },
    "312": {
      "op": "dup",
      "defined_out": [
        "dataIdentifier#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "dataIdentifier#0"
      ]
    },
    "313": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "dataIdentifier#0",
        "status#0"
      ]
    },
    "316": {
      "op": "dup",
      "stack_out": [
        "dataIdentifier#0",
        "dataIdentifier#0",
        "status#0",
        "status#0 (copy)"
      ]
    },
    "317": {
      "op": "uncover 2",
      "defined_out": [
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "status#0",
        "dataIdentifier#0"
      ]
    },
    "319": {
      "op": "box_get",
      "defined_out": [
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "status#0",
        "aggregate%box_get%0#0",
        "aggregate%box_get%1#0"
      ]
    },
    "320": {
      "error": "Box must have value",
      "op": "assert // Box must have value",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "status#0",
        "aggregate%box_get%0#0"
      ]
    },
    "321": {
      "op": "extract 16 1",
      "defined_out": [
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "324": {
      "op": "swap",
      "defined_out": [
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "status#0"
      ]
    },
    "325": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "status#0",
        "0x01"
      ]
    },
    "328": {
      "op": "==",
      "defined_out": [
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "tmp%0#1"
      ]
    },
    "329": {
      "op": "bnz setStatus_bool_true@4",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "332": {
      "op": "dig 1",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "status#0"
      ]
    },
    "334": {
      "op": "bytec_2 // 0x02",
      "defined_out": [
        "0x02",
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "status#0",
        "0x02"
      ]
    },
    "335": {
      "op": "==",
      "defined_out": [
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "tmp%1#0"
      ]
    },
    "336": {
      "op": "bnz setStatus_bool_true@4",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "339": {
      "op": "dig 1",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "status#0"
      ]
    },
    "341": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "status#0",
        "0x00"
      ]
    },
    "342": {
      "op": "==",
      "defined_out": [
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "tmp%2#0"
      ]
    },
    "343": {
      "op": "bz setStatus_bool_false@5",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "346": {
      "block": "setStatus_bool_true@4",
      "stack_in": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ],
      "op": "intc_0 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "or_result%0#0"
      ]
    },
    "347": {
      "block": "setStatus_bool_merge@6",
      "stack_in": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "348": {
      "op": "dup",
      "defined_out": [
        "currentStatus#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "currentStatus#0"
      ]
    },
    "349": {
      "op": "bytec_2 // 0x02",
      "defined_out": [
        "0x02",
        "currentStatus#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "currentStatus#0",
        "0x02"
      ]
    },
    "350": {
      "op": "!=",
      "defined_out": [
        "currentStatus#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "tmp%3#0"
      ]
    },
    "351": {
      "op": "assert",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "352": {
      "op": "dig 2",
      "defined_out": [
        "currentStatus#0",
        "dataIdentifier#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "dataIdentifier#0"
      ]
    },
    "354": {
      "op": "pushint 16 // 16",
      "defined_out": [
        "16",
        "currentStatus#0",
        "dataIdentifier#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "dataIdentifier#0",
        "16"
      ]
    },
    "356": {
      "op": "dig 3",
      "defined_out": [
        "16",
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "dataIdentifier#0",
        "16",
        "status#0"
      ]
    },
    "358": {
      "op": "box_replace",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "359": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "currentStatus#0",
        "dataIdentifier#0",
        "status#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "1"
      ]
    },
    "360": {
      "op": "return",
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ]
    },
    "361": {
      "block": "setStatus_bool_false@5",
      "stack_in": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "dataIdentifier#0",
        "status#0",
        "currentStatus#0",
        "or_result%0#0"
      ]
    },
    "362": {
      "op": "b setStatus_bool_merge@6"
    }
  }
}