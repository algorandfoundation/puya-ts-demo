{
  "version": 3,
  "sources": [
    "/home/parallels/dev/puya-ts-demo/contracts/itxns/itxns.algo.ts"
  ],
  "mappings": ";;;;;AAcA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;;AAcE;;AAAA;AAAA;AAAA;;AAAA;AAdF;;;AAAA;AAAA;;;AAcE;;;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAJF;;;AAAA;;;AAAA;;;AAAA;;;AAIE;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AAHC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAGD;;;AACS;AAII;;;;;;;;;;;AAJJ;;;;AAAA;;;AAAA;AAMK;;AANZ;AASF;;;AACE;;;;;AAGiB;;;;;;;AAHjB;;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_after_if_else@9",
      "stack_out": []
    },
    "10": {
      "op": "pushbytess 0xb8447b36 0xd2024c73 0xc7e260af // method \"createApplication()void\", method \"createNFT(string,string)uint64\", method \"transferNFT(uint64,address)void\"",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(createNFT(string,string)uint64)",
        "Method(transferNFT(uint64,address)void)"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(createNFT(string,string)uint64)",
        "Method(transferNFT(uint64,address)void)"
      ]
    },
    "27": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(createNFT(string,string)uint64)",
        "Method(transferNFT(uint64,address)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(createNFT(string,string)uint64)",
        "Method(transferNFT(uint64,address)void)",
        "tmp%2#0"
      ]
    },
    "30": {
      "op": "match main_createApplication_route@3 main_createNFT_route@4 main_transferNFT_route@5",
      "stack_out": []
    },
    "38": {
      "block": "main_after_if_else@9",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "39": {
      "op": "return",
      "stack_out": []
    },
    "40": {
      "block": "main_transferNFT_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "42": {
      "op": "!",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "43": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "44": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "46": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "47": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "50": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "51": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "54": {
      "callsub": "contracts/itxns/itxns.algo.ts::NFTFactory.transferNFT",
      "op": "callsub transferNFT",
      "stack_out": []
    },
    "57": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "58": {
      "op": "return",
      "stack_out": []
    },
    "59": {
      "block": "main_createNFT_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "61": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "62": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "63": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "65": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "66": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "69": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "72": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%12#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "75": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%12#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "78": {
      "callsub": "contracts/itxns/itxns.algo.ts::NFTFactory.createNFT",
      "op": "callsub createNFT",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "81": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "82": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "88": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "89": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "90": {
      "op": "log",
      "stack_out": []
    },
    "91": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "92": {
      "op": "return",
      "stack_out": []
    },
    "93": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "95": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "96": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "97": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "99": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "100": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "101": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "102": {
      "op": "return",
      "stack_out": []
    },
    "103": {
      "subroutine": "contracts/itxns/itxns.algo.ts::NFTFactory.createNFT",
      "params": {
        "name#0": "bytes",
        "unitName#0": "bytes"
      },
      "block": "createNFT",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "106": {
      "op": "itxn_begin"
    },
    "107": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "108": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "110": {
      "op": "frame_dig -1",
      "defined_out": [
        "unitName#0 (copy)"
      ],
      "stack_out": [
        "unitName#0 (copy)"
      ]
    },
    "112": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "114": {
      "op": "frame_dig -2",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "116": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "118": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "120": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "122": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "123": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "125": {
      "op": "itxn_submit"
    },
    "126": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "128": {
      "retsub": true,
      "op": "retsub"
    },
    "129": {
      "subroutine": "contracts/itxns/itxns.algo.ts::NFTFactory.transferNFT",
      "params": {
        "assetId#0": "uint64",
        "receiver#0": "bytes"
      },
      "block": "transferNFT",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "132": {
      "op": "itxn_begin"
    },
    "133": {
      "op": "frame_dig -2",
      "defined_out": [
        "assetId#0 (copy)"
      ],
      "stack_out": [
        "assetId#0 (copy)"
      ]
    },
    "135": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "137": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "138": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "140": {
      "op": "frame_dig -1",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "142": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "144": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "146": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "148": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "149": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "151": {
      "op": "itxn_submit"
    },
    "152": {
      "retsub": true,
      "op": "retsub"
    }
  }
}