{
  "version": 3,
  "sources": [
    "/home/parallels/dev/puya-ts-demo/contracts/itxns/itxns.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAuCA;;AAAA;;;AAAA;AAAA;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AAIE;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAHC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAKoB;AADH;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGF;;;AAFK;;;AAAA;;;AAAA;AAMP;;AAEZ;AAGyB;AAAA;;AAAA;;;AADb;;;;;;AAFZ;;;AAAA;;;AAAA;AAOqB;;;;AAGf;;;;;;;;AACA;;;;;;;;;;AACA;;;;;;;;AALe;;;AAAA;;;AAAA;;;AAUE;AAAA;;;AAAA;AAAA;;;AAAyC;AAAzC;AAAA;AAAA;AAEvB;AAE0B;;;;;;AACT;;;;;AAHjB;;;;AAAA;;;AAAA;AAQA;AAGM;AAAA;AAEO;;;;;;AAFP;;;;;;;;;;;;;AAHN;;;AAAA;;;AAAA;AAWA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6"
    },
    "6": {
      "op": "bytecblock 0xb8447b36 0x151f7c75"
    },
    "18": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "20": {
      "op": "bz main_after_if_else@8",
      "stack_out": []
    },
    "23": {
      "op": "bytec_0 // method \"createApplication()void\"",
      "defined_out": [
        "Method(createApplication()void)"
      ],
      "stack_out": [
        "Method(createApplication()void)"
      ]
    },
    "24": {
      "op": "pushbytes 0x45ded8e0 // method \"mintAndGetAsset()uint64\"",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(mintAndGetAsset()uint64)"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(mintAndGetAsset()uint64)"
      ]
    },
    "30": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication()void)",
        "Method(mintAndGetAsset()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication()void)",
        "Method(mintAndGetAsset()uint64)",
        "tmp%2#0"
      ]
    },
    "33": {
      "op": "match main_createApplication_route@3 main_mintAndGetAsset_route@4",
      "stack_out": []
    },
    "39": {
      "block": "main_after_if_else@8",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "40": {
      "op": "return",
      "stack_out": []
    },
    "41": {
      "block": "main_mintAndGetAsset_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "43": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "44": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "45": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "47": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "48": {
      "callsub": "contracts/itxns/itxns.algo.ts::FactoryCaller.mintAndGetAsset",
      "op": "callsub mintAndGetAsset",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "51": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "52": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "53": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "54": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "55": {
      "op": "log",
      "stack_out": []
    },
    "56": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "57": {
      "op": "return",
      "stack_out": []
    },
    "58": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "60": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "61": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "62": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "64": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "65": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "66": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "67": {
      "op": "return",
      "stack_out": []
    },
    "68": {
      "subroutine": "contracts/itxns/itxns.algo.ts::FactoryCaller.mintAndGetAsset",
      "params": {},
      "block": "mintAndGetAsset",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "69": {
      "op": "pushbytes base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "75": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "77": {
      "op": "pushbytes base64(CiACAQAxG0EAHIIDBLhEezYE0gJMcwTH4mCvNhoAjgMANwAVAAIjQzEZFEQxGEQ2GgEXNhoCiABIIkMxGRREMRhENhoBVwIANhoCVwIAiAAWFoAEFR98dUxQsCJDMRkURDEYFEQiQ4oCAbEisiKL/7Ili/6yJoEDshAjsgGztDyJigIAsYv+shEishKL/7IUgQSyECOyAbOJ)",
      "defined_out": [
        "CiACAQAxG0EAHIIDBLhEezYE0gJMcwTH4mCvNhoAjgMANwAVAAIjQzEZFEQxGEQ2GgEXNhoCiABIIkMxGRREMRhENhoBVwIANhoCVwIAiAAWFoAEFR98dUxQsCJDMRkURDEYFEQiQ4oCAbEisiKL/7Ili/6yJoEDshAjsgGztDyJigIAsYv+shEishKL/7IUgQSyECOyAbOJ"
      ],
      "stack_out": [
        "CiACAQAxG0EAHIIDBLhEezYE0gJMcwTH4mCvNhoAjgMANwAVAAIjQzEZFEQxGEQ2GgEXNhoCiABIIkMxGRREMRhENhoBVwIANhoCVwIAiAAWFoAEFR98dUxQsCJDMRkURDEYFEQiQ4oCAbEisiKL/7Ili/6yJoEDshAjsgGztDyJigIAsYv+shEishKL/7IUgQSyECOyAbOJ"
      ]
    },
    "233": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "235": {
      "op": "bytec_0 // method \"createApplication()void\"",
      "defined_out": [
        "Method(createApplication()void)"
      ],
      "stack_out": [
        "Method(createApplication()void)"
      ]
    },
    "236": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "238": {
      "op": "intc_2 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "239": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "241": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "242": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "244": {
      "op": "itxn_submit"
    },
    "245": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "247": {
      "op": "itxn_begin"
    },
    "248": {
      "op": "dup",
      "defined_out": [
        "factoryApp#0",
        "factoryApp#0 (copy)"
      ],
      "stack_out": [
        "factoryApp#0",
        "factoryApp#0 (copy)"
      ]
    },
    "249": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "factoryApp#0",
        "value%0#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "251": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "factoryApp#0",
        "value%0#0"
      ]
    },
    "252": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "254": {
      "op": "pushint 200000 // 200000",
      "defined_out": [
        "200000",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "200000"
      ]
    },
    "258": {
      "op": "itxn_field Amount",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "260": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "1"
      ]
    },
    "261": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "263": {
      "op": "intc_0 // 0",
      "stack_out": [
        "factoryApp#0",
        "0"
      ]
    },
    "264": {
      "op": "itxn_field Fee",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "266": {
      "op": "itxn_submit"
    },
    "267": {
      "op": "itxn_begin"
    },
    "268": {
      "op": "dup",
      "stack_out": [
        "factoryApp#0",
        "factoryApp#0 (copy)"
      ]
    },
    "269": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "271": {
      "op": "pushbytes 0xd2024c73 // method \"createNFT(string,string)uint64\"",
      "defined_out": [
        "Method(createNFT(string,string)uint64)",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "Method(createNFT(string,string)uint64)"
      ]
    },
    "277": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "279": {
      "op": "pushbytes \"My NFT\"",
      "defined_out": [
        "\"My NFT\"",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "\"My NFT\""
      ]
    },
    "287": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "289": {
      "op": "pushbytes \"MNFT\"",
      "defined_out": [
        "\"MNFT\"",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "\"MNFT\""
      ]
    },
    "295": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "297": {
      "op": "intc_2 // 6",
      "stack_out": [
        "factoryApp#0",
        "6"
      ]
    },
    "298": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "300": {
      "op": "intc_0 // 0",
      "stack_out": [
        "factoryApp#0",
        "0"
      ]
    },
    "301": {
      "op": "itxn_field Fee",
      "stack_out": [
        "factoryApp#0"
      ]
    },
    "303": {
      "op": "itxn_submit"
    },
    "304": {
      "op": "itxn LastLog",
      "defined_out": [
        "createNFTTxn.LastLog#0",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createNFTTxn.LastLog#0"
      ]
    },
    "306": {
      "op": "dup",
      "defined_out": [
        "createNFTTxn.LastLog#0",
        "createNFTTxn.LastLog#0 (copy)",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createNFTTxn.LastLog#0",
        "createNFTTxn.LastLog#0 (copy)"
      ]
    },
    "307": {
      "op": "extract 4 0",
      "defined_out": [
        "createNFTTxn.LastLog#0",
        "factoryApp#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createNFTTxn.LastLog#0",
        "tmp%0#0"
      ]
    },
    "310": {
      "op": "swap",
      "stack_out": [
        "factoryApp#0",
        "tmp%0#0",
        "createNFTTxn.LastLog#0"
      ]
    },
    "311": {
      "op": "extract 0 4",
      "defined_out": [
        "factoryApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "314": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "factoryApp#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "tmp%0#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "315": {
      "op": "==",
      "defined_out": [
        "factoryApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "tmp%0#0",
        "tmp%2#0"
      ]
    },
    "316": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "factoryApp#0",
        "tmp%0#0"
      ]
    },
    "317": {
      "op": "btoi",
      "defined_out": [
        "createdAssetId#0",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0"
      ]
    },
    "318": {
      "op": "itxn_begin"
    },
    "319": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "createdAssetId#0",
        "factoryApp#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "321": {
      "op": "dig 1",
      "defined_out": [
        "createdAssetId#0",
        "createdAssetId#0 (copy)",
        "factoryApp#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "createdAssetId#0 (copy)"
      ]
    },
    "323": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "325": {
      "op": "intc_0 // 0",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "326": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "inner_txn_params%3%%param_AssetReceiver_idx_0#0"
      ]
    },
    "328": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0"
      ]
    },
    "330": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "createdAssetId#0",
        "factoryApp#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "4"
      ]
    },
    "332": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0"
      ]
    },
    "334": {
      "op": "intc_0 // 0",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "0"
      ]
    },
    "335": {
      "op": "itxn_field Fee",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0"
      ]
    },
    "337": {
      "op": "itxn_submit"
    },
    "338": {
      "op": "itxn_begin"
    },
    "339": {
      "op": "dup",
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "createdAssetId#0 (copy)"
      ]
    },
    "340": {
      "op": "itob",
      "defined_out": [
        "createdAssetId#0",
        "factoryApp#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "tmp%3#0"
      ]
    },
    "341": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "createdAssetId#0",
        "factoryApp#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "factoryApp#0",
        "createdAssetId#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "343": {
      "op": "uncover 3",
      "stack_out": [
        "createdAssetId#0",
        "tmp%3#0",
        "tmp%4#0",
        "factoryApp#0"
      ]
    },
    "345": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "createdAssetId#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "347": {
      "op": "pushbytes 0xc7e260af // method \"transferNFT(uint64,address)void\"",
      "defined_out": [
        "Method(transferNFT(uint64,address)void)",
        "createdAssetId#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "createdAssetId#0",
        "tmp%3#0",
        "tmp%4#0",
        "Method(transferNFT(uint64,address)void)"
      ]
    },
    "353": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "createdAssetId#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "355": {
      "op": "swap",
      "stack_out": [
        "createdAssetId#0",
        "tmp%4#0",
        "tmp%3#0"
      ]
    },
    "356": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "createdAssetId#0",
        "tmp%4#0"
      ]
    },
    "358": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "createdAssetId#0"
      ]
    },
    "360": {
      "op": "intc_2 // 6",
      "stack_out": [
        "createdAssetId#0",
        "6"
      ]
    },
    "361": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "createdAssetId#0"
      ]
    },
    "363": {
      "op": "intc_0 // 0",
      "stack_out": [
        "createdAssetId#0",
        "0"
      ]
    },
    "364": {
      "op": "itxn_field Fee",
      "stack_out": [
        "createdAssetId#0"
      ]
    },
    "366": {
      "op": "itxn_submit"
    },
    "367": {
      "retsub": true,
      "op": "retsub"
    }
  }
}